class Solution {
    ArrayList<Long> nthRowOfPascalTriangle(int n) {
        // code here
        Long M=(long)Math.pow(10,9)+7;
        ArrayList<Long> row=new ArrayList<>();
        row.add(1l);
        
        if(n==1){
            return row;
        }
        
        ArrayList<Long> prev=nthRowOfPascalTriangle(n-1);
        
        
        for(int i=1; i<prev.size(); i++){
            row.add((prev.get(i-1)+prev.get(i))%M);
        }
        
        row.add(1l);
        
        //System.out.print(n+" ");
        //System.out.println(row);
        
        return row;
    }
}

T: 0(n*n) S: 0(n)
//============//
link : https://www.geeksforgeeks.org/problems/pascal-triangle0652/1?page=1

Given a positive integer N, return the Nth row of pascal's triangle.
Pascal's triangle is a triangular array of the binomial coefficients formed by summing up the elements of previous row.
The elements can be large so return it modulo 109 + 7.

File:PascalTriangleAnimated2.gif

Example 1:

Input:
N = 4
Output: 
1 3 3 1
Explanation: 
4th row of pascal's triangle is 1 3 3 1.
Example 2:

Input:
N = 5
Output: 
1 4 6 4 1
Explanation: 
5th row of pascal's triangle is 1 4 6 4 1.
Your Task:
Complete the function nthRowOfPascalTriangle() which takes n, as input parameters and returns an array representing the answer. You don't to print answer or take inputs.

Expected Time Complexity: O(N2)
Expected Auxiliary Space: O(N2)

Constraints:
1 ≤ N ≤ 103

